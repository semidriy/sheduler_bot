from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta

class MessageScheduler:
    def __init__(self):
        self.scheduler = None
        self.bot = None
    
    def setup(self, bot: Bot, scheduler: AsyncIOScheduler):
        self.bot = bot
        self.scheduler = scheduler
    
    async def schedule_welcome_messages(self, user_id: int):
        if not self.scheduler or not self.bot:
            return
        
        # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
        self.scheduler.add_job(
            self._send_second_message,
            'date',
            run_date=datetime.now() + timedelta(seconds=10),
            args=[user_id],
            id=f"second_msg_{user_id}"
        )
        
        # –¢—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 120 —Å–µ–∫—É–Ω–¥
        self.scheduler.add_job(
            self._send_third_message,
            'date',
            run_date=datetime.now() + timedelta(seconds=12),
            args=[user_id],
            id=f"third_msg_{user_id}"
        )
    
    async def _send_second_message(self, user_id: int):
        try:
            await self.bot.send_message(
                user_id, 
                "‚è∞ –≠—Ç–æ –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥!"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    async def _send_third_message(self, user_id: int):
        try:
            await self.bot.send_message(
                user_id, 
                "üéØ –ü—Ä–æ—à–ª–æ 12 —Å–µ–∫! –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
message_scheduler = MessageScheduler()