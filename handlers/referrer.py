from logging import config
from aiogram.filters import Command
from aiogram import types, Router, F, Bot
from aiogram.fsm.context import FSMContext
import aiosqlite

from functions.db_handler import get_bounty_cashback, get_count_referal, get_current_cashback, get_min_cashback, get_referrer_bounty_sum, get_referrer_wallet, get_username_for_bouynt
from state_fsm.fsm import SubAdminState
from is_admin.isadmin import IsSubadmin
from keyboards.subadm_kb import subadmin_menu, wallet_kb
from keyboards.admin_kb import cash_out_kb
from config_data.config import Config, load_config

config: Config = load_config()
admin_ids=config.tg_bot.admin_ids

bot = Bot(token=config.tg_bot.token)

out_kb = types.InlineKeyboardMarkup(inline_keyboard=cash_out_kb)

router = Router()

@router.message(F.text == '–ú–µ–Ω—é', IsSubadmin())
async def profile_menu(message: types.Message) -> None:
    await message.answer('''
üìã <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π <b>—Ä–∞–∑–¥–µ–ª:</b>

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
                         
üîó <b>–†–µ—Ñ. —Å—Å—ã–ª–∫–∞</b> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
                         
üí∞ <b>–í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥</b> - –ó–∞–ø—Ä–æ—Å –≤—ã–≤–æ–¥–∞ –¥–µ–Ω–µ–≥
                         
üìå <b>–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</b> - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
''', reply_markup=subadmin_menu)

@router.message(F.text == '–†–µ—Ñ. —Å—Å—ã–ª–∫–∞ üîó', IsSubadmin())
async def referral_link(message: types.Message) -> None:
    await message.answer('‚§µÔ∏è –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ \n'
                         f'‚îî<code>https://t.me/AliBabyUSD_Bot?start={message.from_user.id}</code>\n\n'
                         '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –µ–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å', parse_mode="HTML")
    
@router.message(F.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà', IsSubadmin())
async def statistic(message: types.Message) -> None:
    min_cashback = await get_min_cashback()
    user_id = message.from_user.id
    bounty_cashback = await get_bounty_cashback()
    count_referal = await get_count_referal(user_id)
    count_bounty_cashback = count_referal * bounty_cashback
    current_cashback = await get_current_cashback(user_id)
    await message.answer('üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n'
                        f'‚îå –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏: <b>{count_referal}</b>\n'
                        f'‚îú –î–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: <b>{count_bounty_cashback}‚ÇΩ</b>\n'
                        f'‚îî –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: <b>{current_cashback}‚ÇΩ</b>\n\n'
                        f'‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º—ã –≤—ã–≤–æ–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{min_cashback}‚ÇΩ</b>', parse_mode="HTML")

@router.message(F.text == '–í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ üí∞', IsSubadmin())
async def cash_output(message: types.Message) -> None:
    admin_ids = config.tg_bot.admin_ids
    min_cashback = await get_min_cashback()
    bounty_sum = await get_referrer_bounty_sum(message.from_user.id)
    wallet_id = await get_referrer_wallet(message.from_user.id)
    ##  –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    kb_reset_bounty_sum = [
        [types.InlineKeyboardButton(text='–û–±–Ω—É–ª–∏—Ç—å', callback_data=f'clear_balance:{message.from_user.id}')]
    ]
    kb_balance = types.InlineKeyboardMarkup(inline_keyboard=kb_reset_bounty_sum)
    if int(bounty_sum) >= int(min_cashback):
        if message.from_user.username != None:
            await message.answer('–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞üí∞\n\n'
                                f'üí∞ –°—É–º–º–∞ –∫ –≤—ã–ø–ª–∞—Ç–µ <b>{bounty_sum}‚ÇΩ</b>\n'
                                 '–ú–æ–∂–µ—Ç–µ –¥–æ–∂–¥–∞—Ç—å—Å—è –ø–æ–∫–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ\n'
                                 '                                ‚ÜòÔ∏è ‚¨áÔ∏è ‚ÜôÔ∏è', reply_markup=out_kb, parse_mode="HTML")
            for admin_id in admin_ids:
                await bot.send_message(admin_id, '‚ö†Ô∏è –£ –≤–∞—Å <b>–Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b> –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n'
                               f'üë§ –ï–≥–æ —Å—Å—ã–ª–∫–∞ @{message.from_user.username}\n'
                               'üìå –ï–≥–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã \n\n'
                               f'<code>{wallet_id}</code>\n\n'
                               f'üí∞ –°—É–º–º–∞ –∫ –≤—ã–ø–ª–∞—Ç–µ {bounty_sum}‚ÇΩ', parse_mode="HTML", reply_markup=kb_balance)
        else:
            await message.answer('–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ <b>–≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥</b> üí∞\n'
                                 '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç <b>—é–∑–µ—Ä–Ω–µ–π–º</b> –∏ –º—ã –Ω–µ –º–æ–∂–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æüòî\n'
                                 '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Å–≤—è–∑–∏ –Ω–∞–ø—Ä—è–º—É—é –∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤\n'
                                 '–ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –≤ —Å–µ—Ç–∏ TRC20'
                                 '                                ‚ÜòÔ∏è ‚¨áÔ∏è ‚ÜôÔ∏è', reply_markup=out_kb, parse_mode="HTML")
    else:
        await message.answer(f'üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å {bounty_sum}‚ÇΩ</b>\n\n' \
                             f'‚ùå –ë–∞–ª–∞–Ω—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å <b>–±–æ–ª—å—à–µ {min_cashback}‚ÇΩ</b>', reply_markup=subadmin_menu, parse_mode="HTML")

@router.callback_query(F.data.startswith('clear_balance'))
async def process_hello_text(query: types.CallbackQuery):
    ##  –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É —Ä–æ—É—Ç–µ—Ä–∞ –í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥
    user_id = query.data.split(':')[1]
    ##. –ü–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É
    username = await get_username_for_bouynt(user_id)
    ##  –ü–æ–ª—É—á–∞–µ–º –µ–≥–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏ –±–∞–ª–∞–Ω—Å
    wallet_id = await get_referrer_wallet(user_id)
    bounty_sum = await get_referrer_bounty_sum(user_id)

    connect = await aiosqlite.connect('bot.db')
    cursor = await connect.cursor()
    sql = await cursor.execute('UPDATE users SET bounty_sum = 0 WHERE user_id=?', (user_id,))
    await connect.commit()
    sql = await sql.fetchone()
    await cursor.close()
    await connect.close()
    await query.message.edit_text('‚úÖ –ó–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n\n'
                               f'üë§ –ï–≥–æ —Å—Å—ã–ª–∫–∞ @{username}\n'
                               'üìå –ï–≥–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã \n\n'
                               f'<code>{wallet_id}</code>\n\n'
                               f'üí∞ –°—É–º–º–∞ –∫ –≤—ã–≤–æ–¥—É –±—ã–ª–∞ —Ä–∞–≤–Ω–∞ {bounty_sum}‚ÇΩ', parse_mode="HTML")

    await bot.send_message(user_id, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <b>–æ–±–Ω—É–ª–∏–ª</b> –≤–∞—à –±–∞–ª–∞–Ω—Å ‚úÖ\n\n'
                                    '–î–µ–Ω—å–≥–∏ –Ω–∞ —Å—á–µ—Ç –ø—Ä–∏–¥—É—Ç <b>–≤ —Ç–µ—á–µ–Ω–∏–∏ 5-15 –º–∏–Ω—É—Ç</b>'
                                    '–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ <b>–Ω–∞—à —Å–µ—Ä–≤–∏—Å</b> ü•≥')

@router.message(F.text == '–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã üìå', IsSubadmin())
async def subadm_wallet(message: types.Message) -> None:
    wallet_id = await get_referrer_wallet(message.from_user.id)
    await message.answer(f'üëÄ <b>–í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞ –≤ —Å–µ—Ç–∏ TRC20</b>\n\n<code>{wallet_id}</code>\n\n'
                          '‚ö™Ô∏è –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</b> –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\n', reply_markup=wallet_kb, parse_mode="HTML")

@router.message(F.text == '–ò–∑–º–µ–Ω–∏—Ç—å ‚úèÔ∏è', IsSubadmin())
async def process_put_wallet(message: types.Message, state: FSMContext):
    await message.answer('üëÄ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –≤ —Å–µ—Ç–∏ TRC20')
    await state.set_state(SubAdminState.fsm_wallet_id)

@router.message(SubAdminState.fsm_wallet_id)
async def edit_wallet_id(message:types.Message, state:FSMContext):
    wallet = message.text
    user_id = message.from_user.id
    connect = await aiosqlite.connect('bot.db')
    cursor = await connect.cursor()
    wallet_id = await cursor.execute('UPDATE users SET wallet_id = ? WHERE user_id=?', (wallet, user_id))
    await connect.commit()
    wallet_id = await wallet_id.fetchone()
    await cursor.close()
    await connect.close()
    await message.answer('‚úÖ –í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑–º–µ–Ω–µ–Ω—ã', reply_markup=subadmin_menu)
    await state.clear()

@router.message(F.text == '–ù–∞–∑–∞–¥ üîô', IsSubadmin())
async def process_back_to_menu(message: types.Message):
    await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å!', reply_markup=subadmin_menu)