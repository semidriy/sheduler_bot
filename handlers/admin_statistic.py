import asyncio
from aiogram import types, F, Router

from functions.db_handler import get_admin_count_referal, get_admin_current_cashback, get_admin_referal_link, get_all_admin_count_referal, get_bounty_cashback
from is_admin.isadmin import IsAdmin
from keyboards.admin_kb import button_back_to_admin

router = Router()

kb_button_back_to_admin = types.InlineKeyboardMarkup(inline_keyboard=button_back_to_admin)

@router.callback_query(F.data == 'admin_stat', IsAdmin())
async def admin_process_stat(query: types.CallbackQuery):
    try:
        subadmin_users = await get_all_admin_count_referal()
        
        if not subadmin_users:
            await query.message.answer("‚ùå –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç.")
            return
        
        await query.message.edit_text(f"üîç –í—Å–µ–≥–æ {len(subadmin_users)} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:")
        
        for subadmin in subadmin_users:
            username = subadmin[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞
            ##  –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            bounty_cashback = await get_bounty_cashback()
            referal_link = await get_admin_referal_link(username)
            count_referal = await get_admin_count_referal(username)
            count_bounty_cashback = count_referal * bounty_cashback
            current_cashback = await get_admin_current_cashback(username)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –∞–¥–º–∏–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
            await query.message.answer(f"üë§ @{username}\n\n"
                                       f'–ï–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n {referal_link}\n\n'
                                       'üìà –ï–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n'
                                       f'‚îå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {count_referal}\n'
                                       f'‚îú –î–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {count_bounty_cashback}‚ÇΩ\n'
                                       f'‚îî –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: {current_cashback}‚ÇΩ', disable_web_page_preview=True)
            await asyncio.sleep(0.3)
    except Exception as e:
        await query.message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
    await query.message.answer('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=kb_button_back_to_admin)