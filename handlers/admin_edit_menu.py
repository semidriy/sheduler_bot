from aiogram import types, F, Router
from aiogram.fsm.context import FSMContext

from functions.db_handler import del_groupid_subadmin, edit_link_subadmin, get_group_id_subadmin, get_link_subadmin, put_group_id_subadmin
from is_admin.isadmin import IsAdmin
from keyboards.admin_kb import subadmin_kb, button_back_subadmin
from state_fsm.fsm import AdminState

router = Router()

subadmin_kb_edit = types.InlineKeyboardMarkup(inline_keyboard=subadmin_kb)
kb_button_back_subadmin = types.InlineKeyboardMarkup(inline_keyboard=button_back_subadmin)

@router.callback_query(F.data == 'admin_edit', IsAdmin())
async def admin_hello_message(query: types.CallbackQuery):
    await query.message.edit_text('üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
    '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)

@router.callback_query(F.data == 'grant_subadmin_profile', IsAdmin())
async def process_add_subadmin(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text('üëÄ –í–≤–µ–¥–∏—Ç–µ USERNAME –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É —Å–∞–±-–∞–¥–º–∏–Ω–æ–≤', reply_markup=kb_button_back_subadmin)
    await state.set_state(AdminState.fsm_add_subadmin)

@router.message(AdminState.fsm_add_subadmin)
async def add_subadmin(message:types.Message, state:FSMContext):
    username = message.text
    subadmin_group_id = await get_group_id_subadmin(username)
    if subadmin_group_id == 3:
        await put_group_id_subadmin(username)
        await message.answer('‚úÖ –°–∞–±-–∞–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω!\n\n' \
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    elif subadmin_group_id == 2:
        await message.answer('üëÄ –°–∞–±-–∞–¥–º–∏–Ω —É–∂–µ –≤ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø–µ!\n\n' \
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    elif subadmin_group_id == None:
        await message.answer('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n\n'
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    await state.clear()

@router.callback_query(F.data == 'grant_down_subadmin_profile', IsAdmin())
async def process_del_subadmin(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text('‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ USERNAME –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @ –¥–ª—è –£–î–ê–õ–ï–ù–ò–Ø –∏–∑ –≥—Ä—É–ø–ø—ã —Å–∞–±-–∞–¥–º–∏–Ω–æ–≤', reply_markup=kb_button_back_subadmin)
    await state.set_state(AdminState.fsm_del_subadmin)

@router.message(AdminState.fsm_del_subadmin)
async def delete_subadmin(message:types.Message, state:FSMContext):
    username = message.text
    subadmin_group_id = await get_group_id_subadmin(username)
    if subadmin_group_id == 2:
        await del_groupid_subadmin(username)
        await message.answer('‚úÖ –°–∞–±-–∞–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω!\n\n' \
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    elif subadmin_group_id == 3:
        await message.answer('üëÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø–µ!\n\n' \
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    elif subadmin_group_id == None:
        await message.answer('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n\n'
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    await state.clear()

@router.callback_query(F.data == 'edit_bounty_link', IsAdmin())
async def process_edit_link_subadmin(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text('‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ USERNAME –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏', reply_markup=kb_button_back_subadmin)
    await state.set_state(AdminState.fsm_process_link_bounty)

@router.message(AdminState.fsm_process_link_bounty)
async def link_subadmin(message:types.Message, state:FSMContext):
    username = message.text
    subadmin_group_id = await get_group_id_subadmin(username)
    if subadmin_group_id == 2:
        await state.set_state(AdminState.fsm_edit_link_bounty)
        subadmin_link = await get_link_subadmin(username)
        await state.update_data(username=username)
        await message.answer(f'üßë‚Äçüßë‚Äçüßí‚Äçüßí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {username}\n'
                             f'üîó –ï–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ - {subadmin_link}\n\n'
                             '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=kb_button_back_subadmin)
    elif subadmin_group_id == 3:
        await state.clear()
        await message.answer('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–±-–∞–¥–º–∏–Ω–æ–º!\n\n' \
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)
    elif subadmin_group_id == None:
        await message.answer('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n\n'
                             'üßë‚Äçüßë‚Äçüßí‚Äçüßí –í—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏\n' \
                             '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit)

@router.message(AdminState.fsm_edit_link_bounty)
async def link_subadmin(message:types.Message, state:FSMContext):
    data = await state.get_data()
    username = data.get('username')
    subadmin_link = message.text
    if not (subadmin_link.startswith('http://') or subadmin_link.startswith('https://')):
            await message.answer('‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://\n' \
                             '–í–≤–µ–¥–∏—Ç–µ URL –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥' , reply_markup=subadmin_kb_edit)
            return
        
    await edit_link_subadmin(subadmin_link, username)
    await message.answer('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!\n\n'
                         f'üßë‚Äçüßë‚Äçüßí‚Äçüßí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {username}\n'
                         f'üîó –ï–≥–æ –Ω–æ–≤–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ - {subadmin_link}\n\n'
                         '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=subadmin_kb_edit,
                         parse_mode=None)